{"ast":null,"code":"import React from'react';import{Navigate}from'react-router-dom';import{useSelector}from'react-redux';import{jsx as _jsx}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children}=_ref;const isAuthenticated=useSelector(state=>state.auth.isAuthenticated);if(!isAuthenticated){// Redirect to login if not authenticated\nreturn/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});}return children;};export default ProtectedRoute;","map":{"version":3,"names":["React","Navigate","useSelector","jsx","_jsx","ProtectedRoute","_ref","children","isAuthenticated","state","auth","to","replace"],"sources":["/home/lelouch/to_do_app/advanced-todo-app/src/components/Auth/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nconst ProtectedRoute = ({ children }) => {\n  const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n  \n  if (!isAuthenticated) {\n    // Redirect to login if not authenticated\n    return <Navigate to=\"/login\" replace />;\n  }\n  \n  return children;\n};\n\nexport default ProtectedRoute;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,WAAW,KAAQ,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1C,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAClC,KAAM,CAAAE,eAAe,CAAGN,WAAW,CAACO,KAAK,EAAIA,KAAK,CAACC,IAAI,CAACF,eAAe,CAAC,CAExE,GAAI,CAACA,eAAe,CAAE,CACpB;AACA,mBAAOJ,IAAA,CAACH,QAAQ,EAACU,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAC,CACzC,CAEA,MAAO,CAAAL,QAAQ,CACjB,CAAC,CAED,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}