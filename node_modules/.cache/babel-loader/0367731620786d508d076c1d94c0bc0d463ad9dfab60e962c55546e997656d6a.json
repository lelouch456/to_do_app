{"ast":null,"code":"import{fetchWeatherData}from'../../api/weatherApi';// Action Types\nexport const ADD_TASK='ADD_TASK';export const DELETE_TASK='DELETE_TASK';export const UPDATE_TASK_PRIORITY='UPDATE_TASK_PRIORITY';export const SET_WEATHER_DATA='SET_WEATHER_DATA';export const SET_WEATHER_ERROR='SET_WEATHER_ERROR';// Action Creators\nexport const addTask=task=>({type:ADD_TASK,payload:task});export const deleteTask=taskId=>({type:DELETE_TASK,payload:taskId});export const updateTaskPriority=(taskId,priority)=>({type:UPDATE_TASK_PRIORITY,payload:{id:taskId,priority}});export const setWeatherData=(location,data)=>({type:SET_WEATHER_DATA,payload:{location,data}});export const setWeatherError=error=>({type:SET_WEATHER_ERROR,payload:error});// Thunk for fetching weather data\nexport const getWeatherForLocation=location=>async dispatch=>{try{const data=await fetchWeatherData(location);dispatch(setWeatherData(location,data));}catch(error){dispatch(setWeatherError(`Failed to fetch weather data: ${error.message}`));}};","map":{"version":3,"names":["fetchWeatherData","ADD_TASK","DELETE_TASK","UPDATE_TASK_PRIORITY","SET_WEATHER_DATA","SET_WEATHER_ERROR","addTask","task","type","payload","deleteTask","taskId","updateTaskPriority","priority","id","setWeatherData","location","data","setWeatherError","error","getWeatherForLocation","dispatch","message"],"sources":["/home/lelouch/to_do_app/advanced-todo-app/src/redux/actions/taskActions.js"],"sourcesContent":["import { fetchWeatherData } from '../../api/weatherApi';\n\n// Action Types\nexport const ADD_TASK = 'ADD_TASK';\nexport const DELETE_TASK = 'DELETE_TASK';\nexport const UPDATE_TASK_PRIORITY = 'UPDATE_TASK_PRIORITY';\nexport const SET_WEATHER_DATA = 'SET_WEATHER_DATA';\nexport const SET_WEATHER_ERROR = 'SET_WEATHER_ERROR';\n\n// Action Creators\nexport const addTask = (task) => ({\n  type: ADD_TASK,\n  payload: task\n});\n\nexport const deleteTask = (taskId) => ({\n  type: DELETE_TASK,\n  payload: taskId\n});\n\nexport const updateTaskPriority = (taskId, priority) => ({\n  type: UPDATE_TASK_PRIORITY,\n  payload: { id: taskId, priority }\n});\n\nexport const setWeatherData = (location, data) => ({\n  type: SET_WEATHER_DATA,\n  payload: { location, data }\n});\n\nexport const setWeatherError = (error) => ({\n  type: SET_WEATHER_ERROR,\n  payload: error\n});\n\n// Thunk for fetching weather data\nexport const getWeatherForLocation = (location) => async (dispatch) => {\n  try {\n    const data = await fetchWeatherData(location);\n    dispatch(setWeatherData(location, data));\n  } catch (error) {\n    dispatch(setWeatherError(`Failed to fetch weather data: ${error.message}`));\n  }\n};\n"],"mappings":"AAAA,OAASA,gBAAgB,KAAQ,sBAAsB,CAEvD;AACA,MAAO,MAAM,CAAAC,QAAQ,CAAG,UAAU,CAClC,MAAO,MAAM,CAAAC,WAAW,CAAG,aAAa,CACxC,MAAO,MAAM,CAAAC,oBAAoB,CAAG,sBAAsB,CAC1D,MAAO,MAAM,CAAAC,gBAAgB,CAAG,kBAAkB,CAClD,MAAO,MAAM,CAAAC,iBAAiB,CAAG,mBAAmB,CAEpD;AACA,MAAO,MAAM,CAAAC,OAAO,CAAIC,IAAI,GAAM,CAChCC,IAAI,CAAEP,QAAQ,CACdQ,OAAO,CAAEF,IACX,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAG,UAAU,CAAIC,MAAM,GAAM,CACrCH,IAAI,CAAEN,WAAW,CACjBO,OAAO,CAAEE,MACX,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAC,kBAAkB,CAAGA,CAACD,MAAM,CAAEE,QAAQ,IAAM,CACvDL,IAAI,CAAEL,oBAAoB,CAC1BM,OAAO,CAAE,CAAEK,EAAE,CAAEH,MAAM,CAAEE,QAAS,CAClC,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAE,cAAc,CAAGA,CAACC,QAAQ,CAAEC,IAAI,IAAM,CACjDT,IAAI,CAAEJ,gBAAgB,CACtBK,OAAO,CAAE,CAAEO,QAAQ,CAAEC,IAAK,CAC5B,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAC,eAAe,CAAIC,KAAK,GAAM,CACzCX,IAAI,CAAEH,iBAAiB,CACvBI,OAAO,CAAEU,KACX,CAAC,CAAC,CAEF;AACA,MAAO,MAAM,CAAAC,qBAAqB,CAAIJ,QAAQ,EAAK,KAAO,CAAAK,QAAQ,EAAK,CACrE,GAAI,CACF,KAAM,CAAAJ,IAAI,CAAG,KAAM,CAAAjB,gBAAgB,CAACgB,QAAQ,CAAC,CAC7CK,QAAQ,CAACN,cAAc,CAACC,QAAQ,CAAEC,IAAI,CAAC,CAAC,CAC1C,CAAE,MAAOE,KAAK,CAAE,CACdE,QAAQ,CAACH,eAAe,CAAC,iCAAiCC,KAAK,CAACG,OAAO,EAAE,CAAC,CAAC,CAC7E,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}