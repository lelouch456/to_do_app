{"ast":null,"code":"import { fetchWeatherData } from '../../api/weatherApi';\n\n// Action Types\nexport const ADD_TASK = 'ADD_TASK';\nexport const DELETE_TASK = 'DELETE_TASK';\nexport const UPDATE_TASK_PRIORITY = 'UPDATE_TASK_PRIORITY';\nexport const SET_WEATHER_DATA = 'SET_WEATHER_DATA';\nexport const SET_WEATHER_ERROR = 'SET_WEATHER_ERROR';\n\n// Action Creators\nexport const addTask = task => ({\n  type: ADD_TASK,\n  payload: task\n});\nexport const deleteTask = taskId => ({\n  type: DELETE_TASK,\n  payload: taskId\n});\nexport const updateTaskPriority = (taskId, priority) => ({\n  type: UPDATE_TASK_PRIORITY,\n  payload: {\n    id: taskId,\n    priority\n  }\n});\nexport const setWeatherData = (location, data) => ({\n  type: SET_WEATHER_DATA,\n  payload: {\n    location,\n    data\n  }\n});\nexport const setWeatherError = error => ({\n  type: SET_WEATHER_ERROR,\n  payload: error\n});\n\n// Thunk for fetching weather data\nexport const getWeatherForLocation = location => async dispatch => {\n  try {\n    const data = await fetchWeatherData(location);\n    dispatch(setWeatherData(location, data));\n  } catch (error) {\n    dispatch(setWeatherError(`Failed to fetch weather data: ${error.message}`));\n  }\n};","map":{"version":3,"names":["fetchWeatherData","ADD_TASK","DELETE_TASK","UPDATE_TASK_PRIORITY","SET_WEATHER_DATA","SET_WEATHER_ERROR","addTask","task","type","payload","deleteTask","taskId","updateTaskPriority","priority","id","setWeatherData","location","data","setWeatherError","error","getWeatherForLocation","dispatch","message"],"sources":["/home/lelouch/to_do_app/advanced-todo-app/src/redux/actions/taskActions.js"],"sourcesContent":["import { fetchWeatherData } from '../../api/weatherApi';\n\n// Action Types\nexport const ADD_TASK = 'ADD_TASK';\nexport const DELETE_TASK = 'DELETE_TASK';\nexport const UPDATE_TASK_PRIORITY = 'UPDATE_TASK_PRIORITY';\nexport const SET_WEATHER_DATA = 'SET_WEATHER_DATA';\nexport const SET_WEATHER_ERROR = 'SET_WEATHER_ERROR';\n\n// Action Creators\nexport const addTask = (task) => ({\n  type: ADD_TASK,\n  payload: task\n});\n\nexport const deleteTask = (taskId) => ({\n  type: DELETE_TASK,\n  payload: taskId\n});\n\nexport const updateTaskPriority = (taskId, priority) => ({\n  type: UPDATE_TASK_PRIORITY,\n  payload: { id: taskId, priority }\n});\n\nexport const setWeatherData = (location, data) => ({\n  type: SET_WEATHER_DATA,\n  payload: { location, data }\n});\n\nexport const setWeatherError = (error) => ({\n  type: SET_WEATHER_ERROR,\n  payload: error\n});\n\n// Thunk for fetching weather data\nexport const getWeatherForLocation = (location) => async (dispatch) => {\n  try {\n    const data = await fetchWeatherData(location);\n    dispatch(setWeatherData(location, data));\n  } catch (error) {\n    dispatch(setWeatherError(`Failed to fetch weather data: ${error.message}`));\n  }\n};\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,sBAAsB;;AAEvD;AACA,OAAO,MAAMC,QAAQ,GAAG,UAAU;AAClC,OAAO,MAAMC,WAAW,GAAG,aAAa;AACxC,OAAO,MAAMC,oBAAoB,GAAG,sBAAsB;AAC1D,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,MAAMC,iBAAiB,GAAG,mBAAmB;;AAEpD;AACA,OAAO,MAAMC,OAAO,GAAIC,IAAI,KAAM;EAChCC,IAAI,EAAEP,QAAQ;EACdQ,OAAO,EAAEF;AACX,CAAC,CAAC;AAEF,OAAO,MAAMG,UAAU,GAAIC,MAAM,KAAM;EACrCH,IAAI,EAAEN,WAAW;EACjBO,OAAO,EAAEE;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,kBAAkB,GAAGA,CAACD,MAAM,EAAEE,QAAQ,MAAM;EACvDL,IAAI,EAAEL,oBAAoB;EAC1BM,OAAO,EAAE;IAAEK,EAAE,EAAEH,MAAM;IAAEE;EAAS;AAClC,CAAC,CAAC;AAEF,OAAO,MAAME,cAAc,GAAGA,CAACC,QAAQ,EAAEC,IAAI,MAAM;EACjDT,IAAI,EAAEJ,gBAAgB;EACtBK,OAAO,EAAE;IAAEO,QAAQ;IAAEC;EAAK;AAC5B,CAAC,CAAC;AAEF,OAAO,MAAMC,eAAe,GAAIC,KAAK,KAAM;EACzCX,IAAI,EAAEH,iBAAiB;EACvBI,OAAO,EAAEU;AACX,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,qBAAqB,GAAIJ,QAAQ,IAAK,MAAOK,QAAQ,IAAK;EACrE,IAAI;IACF,MAAMJ,IAAI,GAAG,MAAMjB,gBAAgB,CAACgB,QAAQ,CAAC;IAC7CK,QAAQ,CAACN,cAAc,CAACC,QAAQ,EAAEC,IAAI,CAAC,CAAC;EAC1C,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdE,QAAQ,CAACH,eAAe,CAAC,iCAAiCC,KAAK,CAACG,OAAO,EAAE,CAAC,CAAC;EAC7E;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}