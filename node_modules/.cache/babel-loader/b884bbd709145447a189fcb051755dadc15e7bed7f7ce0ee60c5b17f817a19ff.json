{"ast":null,"code":"import { ADD_TASK, DELETE_TASK, UPDATE_TASK_PRIORITY, SET_WEATHER_DATA, SET_WEATHER_ERROR } from '../actions/taskActions';\nconst initialState = {\n  tasks: [],\n  weatherData: {},\n  weatherError: null\n};\nconst taskReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TASK:\n      return {\n        ...state,\n        tasks: [...state.tasks, action.payload]\n      };\n    case DELETE_TASK:\n      return {\n        ...state,\n        tasks: state.tasks.filter(task => task.id !== action.payload)\n      };\n    case UPDATE_TASK_PRIORITY:\n      return {\n        ...state,\n        tasks: state.tasks.map(task => task.id === action.payload.id ? {\n          ...task,\n          priority: action.payload.priority\n        } : task)\n      };\n    case SET_WEATHER_DATA:\n      return {\n        ...state,\n        weatherData: {\n          ...state.weatherData,\n          [action.payload.location]: action.payload.data\n        },\n        weatherError: null\n      };\n    case SET_WEATHER_ERROR:\n      return {\n        ...state,\n        weatherError: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport default taskReducer;","map":{"version":3,"names":["ADD_TASK","DELETE_TASK","UPDATE_TASK_PRIORITY","SET_WEATHER_DATA","SET_WEATHER_ERROR","initialState","tasks","weatherData","weatherError","taskReducer","state","action","type","payload","filter","task","id","map","priority","location","data"],"sources":["/home/lelouch/to_do_app/advanced-todo-app/src/redux/reducers/taskReducer.js"],"sourcesContent":["import {\n    ADD_TASK,\n    DELETE_TASK,\n    UPDATE_TASK_PRIORITY,\n    SET_WEATHER_DATA,\n    SET_WEATHER_ERROR\n  } from '../actions/taskActions';\n  \n  const initialState = {\n    tasks: [],\n    weatherData: {},\n    weatherError: null\n  };\n  \n  const taskReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case ADD_TASK:\n        return {\n          ...state,\n          tasks: [...state.tasks, action.payload]\n        };\n      \n      case DELETE_TASK:\n        return {\n          ...state,\n          tasks: state.tasks.filter(task => task.id !== action.payload)\n        };\n      \n      case UPDATE_TASK_PRIORITY:\n        return {\n          ...state,\n          tasks: state.tasks.map(task => \n            task.id === action.payload.id \n              ? { ...task, priority: action.payload.priority } \n              : task\n          )\n        };\n      \n      case SET_WEATHER_DATA:\n        return {\n          ...state,\n          weatherData: {\n            ...state.weatherData,\n            [action.payload.location]: action.payload.data\n          },\n          weatherError: null\n        };\n      \n      case SET_WEATHER_ERROR:\n        return {\n          ...state,\n          weatherError: action.payload\n        };\n      \n      default:\n        return state;\n    }\n  };\n  \n  export default taskReducer;\n  "],"mappings":"AAAA,SACIA,QAAQ,EACRC,WAAW,EACXC,oBAAoB,EACpBC,gBAAgB,EAChBC,iBAAiB,QACZ,wBAAwB;AAE/B,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE,CAAC,CAAC;EACfC,YAAY,EAAE;AAChB,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGL,YAAY,EAAEM,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKZ,QAAQ;MACX,OAAO;QACL,GAAGU,KAAK;QACRJ,KAAK,EAAE,CAAC,GAAGI,KAAK,CAACJ,KAAK,EAAEK,MAAM,CAACE,OAAO;MACxC,CAAC;IAEH,KAAKZ,WAAW;MACd,OAAO;QACL,GAAGS,KAAK;QACRJ,KAAK,EAAEI,KAAK,CAACJ,KAAK,CAACQ,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO;MAC9D,CAAC;IAEH,KAAKX,oBAAoB;MACvB,OAAO;QACL,GAAGQ,KAAK;QACRJ,KAAK,EAAEI,KAAK,CAACJ,KAAK,CAACW,GAAG,CAACF,IAAI,IACzBA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO,CAACG,EAAE,GACzB;UAAE,GAAGD,IAAI;UAAEG,QAAQ,EAAEP,MAAM,CAACE,OAAO,CAACK;QAAS,CAAC,GAC9CH,IACN;MACF,CAAC;IAEH,KAAKZ,gBAAgB;MACnB,OAAO;QACL,GAAGO,KAAK;QACRH,WAAW,EAAE;UACX,GAAGG,KAAK,CAACH,WAAW;UACpB,CAACI,MAAM,CAACE,OAAO,CAACM,QAAQ,GAAGR,MAAM,CAACE,OAAO,CAACO;QAC5C,CAAC;QACDZ,YAAY,EAAE;MAChB,CAAC;IAEH,KAAKJ,iBAAiB;MACpB,OAAO;QACL,GAAGM,KAAK;QACRF,YAAY,EAAEG,MAAM,CAACE;MACvB,CAAC;IAEH;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}