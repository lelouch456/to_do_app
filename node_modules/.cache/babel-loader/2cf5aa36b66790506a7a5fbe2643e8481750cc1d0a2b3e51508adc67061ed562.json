{"ast":null,"code":"import{ADD_TASK,DELETE_TASK,UPDATE_TASK_PRIORITY}from'../actions/taskActions';const localStorageMiddleware=store=>next=>action=>{// Process the action first\nconst result=next(action);// After state changes, update localStorage for certain actions\nswitch(action.type){case ADD_TASK:case DELETE_TASK:case UPDATE_TASK_PRIORITY:const{tasks}=store.getState().tasks;localStorage.setItem('tasks',JSON.stringify(tasks));break;default:break;}return result;};export default localStorageMiddleware;","map":{"version":3,"names":["ADD_TASK","DELETE_TASK","UPDATE_TASK_PRIORITY","localStorageMiddleware","store","next","action","result","type","tasks","getState","localStorage","setItem","JSON","stringify"],"sources":["/home/lelouch/to_do_app/advanced-todo-app/src/redux/middlewares/localStorageMiddleware.js"],"sourcesContent":["import { ADD_TASK, DELETE_TASK, UPDATE_TASK_PRIORITY } from '../actions/taskActions';\n\nconst localStorageMiddleware = store => next => action => {\n  // Process the action first\n  const result = next(action);\n  \n  // After state changes, update localStorage for certain actions\n  switch (action.type) {\n    case ADD_TASK:\n    case DELETE_TASK:\n    case UPDATE_TASK_PRIORITY:\n      const { tasks } = store.getState().tasks;\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n      break;\n    default:\n      break;\n  }\n  \n  return result;\n};\n\nexport default localStorageMiddleware;\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,WAAW,CAAEC,oBAAoB,KAAQ,wBAAwB,CAEpF,KAAM,CAAAC,sBAAsB,CAAGC,KAAK,EAAIC,IAAI,EAAIC,MAAM,EAAI,CACxD;AACA,KAAM,CAAAC,MAAM,CAAGF,IAAI,CAACC,MAAM,CAAC,CAE3B;AACA,OAAQA,MAAM,CAACE,IAAI,EACjB,IAAK,CAAAR,QAAQ,CACb,IAAK,CAAAC,WAAW,CAChB,IAAK,CAAAC,oBAAoB,CACvB,KAAM,CAAEO,KAAM,CAAC,CAAGL,KAAK,CAACM,QAAQ,CAAC,CAAC,CAACD,KAAK,CACxCE,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEC,IAAI,CAACC,SAAS,CAACL,KAAK,CAAC,CAAC,CACpD,MACF,QACE,MACJ,CAEA,MAAO,CAAAF,MAAM,CACf,CAAC,CAED,cAAe,CAAAJ,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}