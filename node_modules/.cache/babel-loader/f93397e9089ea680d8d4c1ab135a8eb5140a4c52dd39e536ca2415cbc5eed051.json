{"ast":null,"code":"import { LOGIN_SUCCESS, LOGOUT } from '../actions/authActions';\nconst initialState = {\n  isAuthenticated: localStorage.getItem('isAuthenticated') === 'true',\n  user: JSON.parse(localStorage.getItem('user')) || null,\n  error: null\n};\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: action.payload,\n        error: null\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null\n      };\n    default:\n      return state;\n  }\n};\nexport default authReducer;","map":{"version":3,"names":["LOGIN_SUCCESS","LOGOUT","initialState","isAuthenticated","localStorage","getItem","user","JSON","parse","error","authReducer","state","action","type","payload"],"sources":["/home/lelouch/to_do_app/advanced-todo-app/src/redux/reducers/authReducer.js"],"sourcesContent":["import { LOGIN_SUCCESS, LOGOUT } from '../actions/authActions';\n\nconst initialState = {\n  isAuthenticated: localStorage.getItem('isAuthenticated') === 'true',\n  user: JSON.parse(localStorage.getItem('user')) || null,\n  error: null\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: action.payload,\n        error: null\n      };\n    \n    case LOGOUT:\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null\n      };\n    \n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,MAAM,QAAQ,wBAAwB;AAE9D,MAAMC,YAAY,GAAG;EACnBC,eAAe,EAAEC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,KAAK,MAAM;EACnEC,IAAI,EAAEC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI;EACtDI,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGT,YAAY,EAAEU,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKb,aAAa;MAChB,OAAO;QACL,GAAGW,KAAK;QACRR,eAAe,EAAE,IAAI;QACrBG,IAAI,EAAEM,MAAM,CAACE,OAAO;QACpBL,KAAK,EAAE;MACT,CAAC;IAEH,KAAKR,MAAM;MACT,OAAO;QACL,GAAGU,KAAK;QACRR,eAAe,EAAE,KAAK;QACtBG,IAAI,EAAE;MACR,CAAC;IAEH;MACE,OAAOK,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}